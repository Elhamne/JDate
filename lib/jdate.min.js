!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("JDate",[],t):"object"==typeof exports?exports.JDate=t():e.JDate=t()}(this,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(n,a,function(t){return e[t]}.bind(null,a));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t){e.exports={MONTH_NAMES:["فروردین","اردیبهشت","خرداد","تیر","امرداد","شهریور","مهر","آبان","آذر","دی","بهمن","اسفند"],ABBR_DAYS:["۱ش","۲ش","۳ش","۴ش","۵ش","ج","ش"],DAYS_NAMES:["یکشنبه","دوشنبه","سه‌شنبه","چهارشنبه","پنج‌شنبه","جمعه","شنبه"],GREGORIAN_EPOCH:1721425.5,PERSIAN_EPOCH:1948320.5}},function(e,t,r){"use strict";r.r(t);var n=r(0);function a(e,t){return e-Math.floor(e/t)*t}function o(e){return e&&1===e.length?"0".concat(e):e}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,r,o;return t=e,o=[{key:"leapGregorian",value:function(e){return e%4==0&&!(e%100==0&&e%400!=0)}},{key:"gregorianToJulian",value:function(t,r,a){var o;return o=r<=2?0:e.leapGregorian(t)?-1:-2,n.GREGORIAN_EPOCH-1+365*(t-1)+Math.floor((t-1)/4)+-Math.floor((t-1)/100)+Math.floor((t-1)/400)+Math.floor((367*r-362)/12+(o+a))}},{key:"julianToGregorian",value:function(t){var r=Math.floor(t-.5)+.5,o=r-n.GREGORIAN_EPOCH,i=Math.floor(o/146097),u=a(o,146097),l=Math.floor(u/36524),f=a(u,36524),c=Math.floor(f/1461),s=a(f,1461),h=Math.floor(s/365),v=400*i+100*l+4*c+h;4!==l&&4!==h&&(v+=1);var p,g=r-e.gregorianToJulian(v,1,1);p=r<e.gregorianToJulian(v,3,1)?0:(e.leapGregorian(v),1);var y=Math.floor((12*(g+p)+373)/367);return[v,y,r-e.gregorianToJulian(v,y,1)+1]}},{key:"leapPersian",value:function(e){return 682*((e-(e>0?474:473))%2820+474+38)%2816<682}},{key:"persianToJulian",value:function(e,t,r){var o=e-(e>=0?474:473),i=474+a(o,2820);return r+(t<=7?31*(t-1):30*(t-1)+6)+Math.floor((682*i-110)/2816)+365*(i-1)+1029983*Math.floor(o/2820)+(n.PERSIAN_EPOCH-1)}},{key:"julianToPersian",value:function(t){var r,n=Math.floor(t)+.5,o=n-e.persianToJulian(475,1,1),i=Math.floor(o/1029983),u=a(o,1029983);if(1029982===u)r=2820;else{var l=Math.floor(u/366),f=a(u,366);r=Math.floor((2134*l+2816*f+2815)/1028522)+l+1}var c=r+2820*i+474;c<=0&&(c-=1);var s=n-e.persianToJulian(c,1,1)+1,h=s<=186?Math.ceil(s/31):Math.ceil((s-6)/30);return[c,h,n-e.persianToJulian(c,h,1)+1]}},{key:"persianToGregorian",value:function(t,r,n){var a=e.persianToJulian(t,r,n);return e.julianToGregorian(a)}},{key:"gregorianToPersian",value:function(t,r,n){var a=e.gregorianToJulian(t,r,n);return e.julianToPersian(a)}}],(r=null)&&i(t.prototype,r),o&&i(t,o),e}();function l(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=e[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}r.d(t,"default",function(){return c});var c=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.input=t,Array.isArray(t)?(this.date=t.map(function(e){return parseInt(e,10)}),this._d=this.toGregorian()):t instanceof Date&&(this._d=t,this.date=e.toJalali(this.input))}var t,r,a;return t=e,a=[{key:"toJalali",value:function(e){var t=u.gregorianToJulian(e.getFullYear(),e.getMonth()+1,e.getDate());return u.julianToPersian(t)}},{key:"to_jalali",value:function(t){return e.toJalali(t)}},{key:"toGregorian",value:function(e,t,r){var n=u.julianToGregorian(u.persianToJulian(e,t,r));return new Date(n[0],n[1]-1,n[2])}},{key:"to_gregorian",value:function(t,r,n){return e.toGregorian(t,r,n)}},{key:"isLeapYear",value:function(e){return u.leapPersian(e)}},{key:"daysInMonth",value:function(t,r){var n=t-Math.floor(r/12),a=r-12*Math.floor(r/12);return a<0?(a+=12,n-=1):0===a&&(a=12),a<6?31:a<11?30:e.isLeapYear(n)?30:29}}],(r=[{key:"toGregorian",value:function(){return e.toGregorian(this.date[0],this.date[1],this.date[2])}},{key:"getFullYear",value:function(){return this.date[0]}},{key:"setFullYear",value:function(e){return this.date[0]=parseInt(e,10),this.input=this.toGregorian(),this}},{key:"getMonth",value:function(){return this.date[1]}},{key:"setMonth",value:function(e){var t=l(function(e,t){if(t>12||t<=0){var r=Math.floor((t-1)/12);return[e-r,t-12*r]}return[e,t]}(this.getFullYear(),parseInt(e,10)),2);return this.date[0]=t[0],this.date[1]=t[1],this.input=this.toGregorian(),this}},{key:"getDate",value:function(){return this.date[2]}},{key:"setDate",value:function(e){return this.date[2]=parseInt(e,10),this.input=this.toGregorian(),this}},{key:"getDay",value:function(){return this._d.getDay()}},{key:"format",value:function(e){var t=function e(t,r){var n=t.match(/[yY]+/);if(!n)return t;switch(n[0]){case"YYYY":case"YYY":return e(t.replace(n,r.getFullYear()),r);case"YY":return e(t.replace(n,String(r.getFullYear()).slice(2)),r);default:return t}}(e,this);return t=function e(t,r){var a=t.match(/[dD]+/);if(!a)return t;switch(a[0]){case"D":return e(t.replace(a,r.getDate()),r);case"DD":var i=o(r.getDate().toString());return e(t.replace(a,i),r);case"d":case"dd":return e(t.replace(a,n.ABBR_DAYS[r.getDay()]),r);case"ddd":case"dddd":return e(t.replace(a,n.DAYS_NAMES[r.getDay()]),r);default:return t}}(t=function e(t,r){var a=t.match(/[mM]+/);if(!a)return t;switch(a[0]){case"M":return e(t.replace(a,r.getMonth()),r);case"MM":var i=o(r.getMonth().toString());return e(t.replace(a,i),r);case"MMM":case"MMMM":return e(t.replace(a,n.MONTH_NAMES[r.getMonth()-1]),r);default:return t}}(t,this),this)}}])&&f(t.prototype,r),a&&f(t,a),e}()}]).default});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
